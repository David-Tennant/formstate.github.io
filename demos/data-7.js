var data = {"type":"app","index":7,"htmlFileName":"app-7.html","sources":[{"mode":"js","code":"/** React + MUI + mobx */\nimport * as React from 'react';\nimport { render, Button, ErrorText } from './mui';\nimport { observer } from 'mobx-react';\nimport { observable, action } from 'mobx';\nimport { resize } from 'eze/lib/client';\nimport { Vertical, Horizontal } from './gls';\n\n/** Field */\nimport { Field } from './field';\n\n/** FieldState */\nimport { FieldState, FormState } from '../../index';\n\n\nconst nameRequired = (val: string) => !val && 'Name required';\nconst form = new FormState({\n  name1: new FieldState({\n    value: '',\n  }).validators(nameRequired),\n  name2: new FieldState({\n    value: '',\n  }).validators(nameRequired),\n})\n  .compose()\n  .validators(($) => $.name1.$ !== $.name2.$ && 'Names must match');\n\nrender(() => {\n  return (<form onSubmit={async (e) => {\n    e.preventDefault();\n    const res = await form.validate();\n    if (res.hasError) {\n      return;\n    }\n    alert('Valid!');\n  }}>\n    <Vertical>\n      <Field\n        id={\"name1\"}\n        label=\"Name\"\n        fieldState={form.$.name1}\n      />\n      <Field\n        id={\"name2\"}\n        label=\"Re-enter name\"\n        fieldState={form.$.name2}\n      />\n\n      {form.showFormError && <ErrorText>{form.formError}</ErrorText>}\n\n      {/** Over all form submit */}\n      <Horizontal verticalAlign=\"center\">\n        <Button\n          type=\"submit\">\n          Submit\n        </Button>\n\n        {form.hasError && <ErrorText>Form has error: {form.error}</ErrorText>}\n      </Horizontal>\n    </Vertical>\n  </form>);\n});\n"}],"height":"300px"}