var data = {"type":"app","index":9,"htmlFileName":"app-9.html","sources":[{"mode":"js","code":"/** React + MUI + mobx + moment */\nimport * as React from 'react';\nimport { render, Button, ErrorText, labelClass, inputClass } from './mui';\nimport { observer } from 'mobx-react';\nimport { Vertical } from './gls';\nimport moment from 'moment';\n\n/** FieldState */\nimport { FieldState } from '../../index';\n\n\n/** Example date parsing and validator */\ntype ParseDateResult =\n  | { valid: false }\n  | { valid: true, date: Date };\n\n/** only allows AUSTRALIAN format */\nconst parseDate = (value: string): ParseDateResult => {\n  let date = moment(value, ['DD/MM/YYYY'], true);\n  if (!date.isValid()) {\n    return { valid: false };\n  }\n  return { valid: true, date: date.toDate() };\n}\n\n/** Example date FieldState */\nconst fieldState = new FieldState<string | null>(null)\n  .validators(\n    (val) => {\n      if (val == null || !val.trim()) return null;\n      const { valid } = parseDate(val);\n      if (!valid) return 'Date must be of format DD/MM/YYYY';\n    },\n);\n\n/** Example DateInputField */\ntype DateInputFieldProps = {\n  fieldState: FieldState<string | null>,\n  label: string\n};\nconst DateInputField: React.SFC<DateInputFieldProps> = observer((props: DateInputFieldProps) => {\n  return (\n    <label>\n      <span className={labelClass}>{props.label}</span>\n      <input\n        className={inputClass}\n        value={\n          props.fieldState.value == null\n            ? ''\n            : props.fieldState.value.toString()\n        }\n        onChange={(e) => {\n          props.fieldState.onChange(e.target.value);\n        }}\n      />\n    </label>\n  );\n});\n\nrender(() => <Vertical margin={10}>\n  <DateInputField\n    label=\"Date of registry (DD/MM/YYYY)\"\n    fieldState={fieldState} />\n  {fieldState.hasError && <ErrorText>Current Field Error = {fieldState.error}</ErrorText>}\n  <Button onClick={() => fieldState.validate()}>Validate</Button>\n</Vertical>);\n"}],"height":"300px","pageSubDirName":"all"}